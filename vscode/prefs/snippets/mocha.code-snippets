{
	"Typescript Mocha File": {
		"prefix": "mochafile",
		"scope": "typescript,typescriptreact",
		"body": [
			"import chai from 'chai';",
			"import 'mocha';",
			"",
			"const { expect } = chai;",
			"",
			"describe('${1:Test Suite}', function() {",
			"});"
		],
		"description": "A Typescript mocha file"
	},
	"Typescript Mocha Test Case": {
		"prefix": "mochatest",
		"scope": "typescript,typescriptreact",
		"body": [
			"it('should ${1:do the thing}', async function() {",
			"});"
		],
		"description": "A Typescript mocha test case"
	},
	"Mocha Chai-As-Promised": {
		"prefix": "mocha-chai-as-promised",
		"scope": "typescript,typescriptreact,javascript,javascriptreact",
		"body": [
			"import chai from 'chai';",
			"import chaiAsPromised from 'chai-as-promised';",
			"",
			"chai.use(chaiAsPromised);"
		],
		"description": "A Typescript mocha test case"
	},
	"Mocha String": {
		"prefix": "mocha-chai-string",
		"scope": "typescript,typescriptreact,javascript,javascriptreact",
		"body": [
			"import chai from 'chai';",
			"import chaiString from 'chai-string';",
			"",
			"chai.use(chaiString);"
		],
		"description": "A Typescript mocha test case"
	},
	"Mocha Sinon Sandbox": {
		"prefix": "mocha-sandbox",
		"scope": "javascript,javascriptreact",
		"body": [
			"let sandbox;",
			"",
			"beforeEach(function() {",
			"    sandbox = sinon.sandbox.create();",
			"});",
			"",
			"afterEach(function() {",
			"    sandbox.restore();",
			"});"
		],
		"description": "Setup a sinon sandbox in a mocha test"
	},
	"Mocha Sinon Sandbox TS": {
		"prefix": "mocha-sandbox",
		"scope": "typescript,typescriptreact",
		"body": [
			"let sandbox: sinon.SinonSandbox;",
			"",
			"beforeEach(function() {",
			"    sandbox = sinon.sandbox.create();",
			"});",
			"",
			"afterEach(function() {",
			"    sandbox.restore();",
			"});"
		],
		"description": "Setup a sinon sandbox in a mocha test"
	},
}