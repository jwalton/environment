{
	"Jest Test File": {
	"scope": "javascript,typescript",
	"prefix": "jestfile",
		"body": [
		"/**",
		" * @jest-environment node",
		" */",
		"",
		"import chai from 'chai';",
		"import chaiJest from 'chai-jest';",
		"chai.use(chaiJest);",
		"",
		"const { expect } = chai;",
		"",
		"describe('${1:Test Suite}', () => {",
		"    beforeEach(() => {",
		"       // TODO: Uncomment this if you're using `jest.spyOn()` to restore mocks between tests",
		"       // jest.restoreAllMocks();",
		"    });",
		"",
		"    it('should do the thing', () => {",
		"       // TODO",
		"    });",
		"});",
	],
	"description": "Simple test file"
},
	"Jest React Test File": {
	"scope": "javascriptreact,typescriptreact",
	"prefix": "jestfile",
		"body": [
		"import { render } from '@testing-library/react';",
		"import userEvent from '@testing-library/user-event';",
		"import React from 'react';",
		"import chai from 'chai';",
		"import chaiDom from 'chai-dom';",
		"",
		"chai.use(chaiDom);",
		"const { expect } = chai;",
		"",
		"describe('${1:Test Suite}', () => {",
		"    beforeEach(() => {",
		"       // TODO: Uncomment this if you're using `jest.spyOn()` to restore mocks between tests",
		"       // jest.restoreAllMocks();",
		"    });",
		"",
		"    it('should do the thing', () => {",
		"        const { getByText } = render(<div>Hello World</div>);",
		"",
		"        const tab = getByText('Hello World');",
		"        expect(tab).to.exist;",
		"        userEvent.click(tab);",
		"    });",
		"});",
	],
	"description": "Simple test file"
	}
}